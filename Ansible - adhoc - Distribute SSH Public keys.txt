# Ansible - Distribute SSH Public keys

1. Get config file location:
$ ansible --version
  config file = /etc/ansible/ansible.cfg

2. Create a new ansible.cfg:
$ mkdir ansible ; cd ansible

$ vim ansible.cfg
[defaults]
inventory=./inventory
remote_user=root

3. Check that new config is being used:
~/ansible$ ansible --version
ansible 2.5.1
  config file = /home/devops/ansible/ansible.cfg

4. Create inventory file and populate with hosts:
$ vim inventory
10.10.10.[11:12]

5. List hosts in inventory file:
~/ansible$ ansible all --list-hosts
  hosts (2):
    10.10.10.11
    10.10.10.12

6. Collect PUBLIC KEYS of the hosts - Just ssh and accept 
$ ssh 10.10.10.11
$ ssh 10.10.10.12

7. Generate key on Ansible host:
:~/ansible$ ssh-keygen -t rsa

8. Create PlayBook to Install Public Key on remote systems:
$ vim ssh_key_dist.yml
---
- hosts: squid
  become: true
  become_user: root
  tasks:
  - name: Set AUTH KEY for user devops, copying it from current user (e.g. root) without validating the TLS/SSL cert
    ansible.posix.authorized_key:
      user: devop
      state: present
      key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
      validate_certs: False

## run with:
## ansible-playbook -i inventory ssh_key_dist.yml --ask-pass
-or-
## ansible-playbook -i inventory ssh_key_dist.yml --ask-become-pass --ask-pass


9. Ensure the 'sshpass' package is installed

10. Run ssh_key_dist.yml playbook # -k prompts for password
$ ansible-playbook -k ssh_key_dist.yml
SSH password:
...