# Install a Start HTTPD with custom facts

# Create custom.fact file:
$ vim custom.fact
[general]
package = httpd
service = httpd
state = started


# Create playbook to copy the above facts_file to /etc/ansible/facts.d/custom.fact on webservers.
$ vim setup_facts.yml
- name: Install remote facts
  hosts: webservers
  become: yes
  vars:
    remote_dir: /etc/ansible/facts.d
    facts_file: custom.fact
  tasks:
  - name: Create the remote directory
    file:
      state: directory
      recurse: yes
      path: "{{ remote_dir }}"
  - name: Install the new facts
    copy:
      src: "{{ facts_file }}"
      dest: "{{ remote_dir }}"


# Run the playbook:	
$ ansible-playbook setup_facts.yml


# View only the ansible_local section, which contains user-defined facts:
$ ansible webservers -m setup -a 'filter=ansible_local'


# Now write a playbook that uses both default and user-defined facts to configure the webservers host group, and make sure that all of the tasks are defined.

First  task: Install the httpd package, using the user fact for the name of the package.
Second task: Use the custom fact to start the httpd service

$ vim setup_facts_httpd.yml
- name: Install Apache and starts the service
  hosts: webservers
  become: yes
  tasks:
  - name: Install the required package
    yum:
      name: "{{ ansible_local.custom.general.package }}"
      state: latest

  - name: Start the service
    service:
      name: "{{ ansible_local.custom.general.service }}"
      state: "{{ ansible_local.custom.general.state }}"



# Run the playbook:	 
$ ansible-playbook setup_facts_httpd.yml


# Conmfirm that the httpd service is running on webservers:
$ ansible webservers -m command -a 'systemctl status httpd'
