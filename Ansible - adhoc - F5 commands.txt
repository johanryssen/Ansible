
## tmsh = Traffic Management Shell
### gtm = Global Traffic Module (DNS)
### asm = Application Security Module
### apm = Access Policy Module
### ltm = Local Traffic Module
### cm  ~ Config/Component mgmt

--------------------

## List device f5.local.vm

# ansible f5 -a 'tmsh list cm device f5.local.vm'

f5 | CHANGED | rc=0 >>
cm device f5.local.vm {
    active-modules { "BIG-IP, VE ENTERPRISE|RPZIWOS-DEPQXOR|Rate Shaping|External Interface and Network HSM, VE|SDN Services, VE|SSL, Forward Proxy, VE|BIG-IP VE, Multicast Routing|APM, Limited|SSL, VE|DNS (1K QPS), VE|Routing Bundle, VE|ASM, VE|Crytpo Offload, VE, Tier 1 (25M - 200M)|Max Compression, VE|Advanced Web Application Firewall, VE|AFM, VE|DNSSEC|Anti-Virus Checks|Base Endpoint Security Checks|Firewall Checks|Network Access|Secure Virtual Keyboard|APM, Web Application|Machine Certificate Checks|Protected Workspace|Remote Desktop|App Tunnel|VE, Carrier Grade NAT (AFM ONLY)|PSM, VE" }
    base-mac 08:00:27:c1:45:6a
    build 0.0.3
    cert dtdi.crt
    chassis-id wr3d47b5-0818-d241-5371jdef0903
    edition Final
    failover-state active
    hostname f5.local.vm
    key dtdi.key
    management-ip 172.16.11.188
    marketing-name "BIG-IP Virtual Edition"
    platform-id Z100
    product BIG-IP
    self-device true
    time-zone UTC
    version 16.0.0
}

--------------------

## Create and list user:

# ansible f5 -a "tmsh create auth user user01 shell bash password 'RA%fG 67f$3D' description 'Test user 01'
 session-limit 1 partition-access add { all-partitions { role admin } }"

# ansible f5 -a 'tmsh list auth user user01'

f5 | CHANGED | rc=0 >>
auth user user01 {
    description "Test user 01"
    encrypted-password !!
    partition Common
    partition-access {
        all-partitions {
            role admin
        }
    }
    shell bash
}

--------------------

## Create VLAN:

# ansible f5 -a "tmsh create net vlan VLAN01 description 'This is VLAN 1' learning enable-forward interfaces add { 1.1 }"

# ansible f5 -a 'tmsh list net vlan VLAN01'

f5 | CHANGED | rc=0 >>
net vlan VLAN01 {
    description "This is VLAN 1"
    fwd-mode l3
    if-index 336
    interfaces {
        1.1 { }
    }
    tag 4094
}

--------------------

## Create a Trunk:

# ansible f5 -a "tmsh create net trunk trunk01 lacp-mode active description 'Trunk 01 with LACP' interfaces add { 1.3 } stp enabled"

# ansible f5 -a "tmsh list net trunk trunk01"

f5 | CHANGED | rc=0 >>
net trunk trunk01 {
    bandwidth 10000
    cfg-mbr-count 1
    description "Trunk 01 with LACP"
    id 0
    interfaces {
        1.3
    }
    mac-address 08:00:27:c1:45:6a
    working-mbr-count 1
}

--------------------

## Create Packet Filters : Rules


# ansible f5 -a "tmsh create net rate-shaping class RateClass01"
f5 | CHANGED | rc=0 >>


# ansible f5 -a "tmsh create net packet-filter PF01 description 'Packet Filter 01' order 1 action accept logging enabled vla
n VLAN01 rate-class RateClass01"
f5 | CHANGED | rc=0 >>

# ansible f5 -a "tmsh list net packet-filter PF01"
f5 | CHANGED | rc=0 >>
net packet-filter PF01 {
    action accept
    description "Packet Filter 01"
    logging enabled
    order 1
    rate-class RateClass01
    vlan VLAN01
}

--------------------

## Save config:

# ansible f5 -a "tmsh save /sys config"

f5 | CHANGED | rc=0 >>
Saving running configuration...
  /config/bigip.conf
  /config/bigip_base.conf
  /config/bigip_user.conf
Saving Ethernet map ...done
Saving PCI map ...
 - verifying checksum .../var/run/f5pcimap: OK
done
 - saving ...done

--------------------
